stages:
  - Dependencies
  - Build Binary
  - Test
  - Documentation
  - Coverage
  - Build Container
  - Publish Container

variables:
  GO111MODULE: 'on'
  GOFLAGS: '-mod=vendor'

Go Dependencies:
  needs: []
  stage: Dependencies
  image: golang:1.16.2
  tags:
    - k8s:shared
    - arch:amd64
  script:
    - go mod vendor
  cache:
    key: go-${CI_COMMIT_SHA}
    paths:
      - ./vendor
    policy: push

JS Dependencies:
  needs: []
  stage: Dependencies
  image: node:15.11.0-buster
  tags:
    - k8s:shared
    - arch:amd64
  script:
    - yarn install --no-lockfile # Will use my npm proxy/registry allowing for faster pulling of dependencies.
  cache:
    key: js-${CI_COMMIT_SHA}
    paths:
      - ./node_modules
    policy: push

Build:
  needs:
    - "Go Dependencies"
  stage: Build Binary
  image: golang:1.16.2
  tags:
    - k8s:shared
    - arch:amd64
  script:
    - go build -o ./bin/rest-api-${GOARCH} github.com/harderthanitneedstobe/rest-api/v0/cmd/api
  cache:
    key: go-${CI_COMMIT_SHA}
    paths:
      - ./bin
      - ./vendor
    policy: pull-push

Schema Generation:
  needs:
    - "Go Dependencies"
  stage: Test
  image: golang:1.16.2
  tags:
    - k8s:shared
  script:
    - make schema
    - make special-tests
  cache:
    key: go-${CI_COMMIT_SHA}
    paths:
      - ./vendor
    policy: pull

Tests:
  needs:
    - "Go Dependencies"
  services:
    - postgres:13
  variables:
    POSTGRES_HOST: postgres
    POSTGRES_PASSWORD: ""
    POSTGRES_USER: api-testing
    POSTGRES_DB: test-db
    POSTGRES_HOST_AUTH_METHOD: trust
  stage: Test
  image: golang:1.16.2
  tags:
    - k8s:shared
    - arch:amd64
  before_script:
    - make apply-schema-ci
  script:
    - make test
  cache:
    key: go-${CI_COMMIT_SHA}
    paths:
      - ./vendor
    policy: pull
  artifacts:
    name: "$CI_COMMIT_SHA-test-coverage"
    paths:
      - ./coverage.txt
    expire_in: 7 days

Yeet Coverage:
  needs:
    - "Tests"
  environment:
    name: DeepSource
  stage: Coverage
  image: ghcr.io/harderthanitneedstobe/deepsource:v0.1.7-9-gff81369
  tags:
    - k8s:shared
    - arch:amd64
  script:
    - DEEPSOURCE_DSN=$K8S_SECRET_DEEPSOURCE_DSN /usr/bin/deepsource report --analyzer test-coverage --key go --value-file ./coverage.txt
  dependencies:
    - "Tests"

Documentation:
  allow_failure: true
  needs:
    - "Go Dependencies"
  stage: Documentation
  image: golang:1.16.2
  tags:
    - k8s:shared
    - arch:amd64
  script:
    - make docs
  cache:
    key: go-${CI_COMMIT_SHA}
    paths:
      - ./vendor
    policy: pull
  artifacts:
    name: "$CI_COMMIT_SHA-documentation"
    paths:
      - ./docs
    expire_in: 7 days

Kaniko - REST API:
  needs:
    - "Go Dependencies"
  stage: Build Container
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  tags:
    - k8s:shared
    - arch:amd64
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --no-push

Kaniko - Work UI:
  allow_failure: true
  needs:
    - "Go Dependencies"
  stage: Build Container
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  tags:
    - k8s:shared
    - arch:amd64
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile.work --no-push

Publish GitHub - REST API:
  needs:
    - "Kaniko - REST API"
    - "Tests"
  environment: GitHub
  stage: Publish Container
  only:
    refs:
      - main
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  tags:
    - k8s:shared
    - arch:amd64
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"ghcr.io\":{\"username\":\"elliotcourant\",\"password\":\"$K8S_SECRET_GITHUB_ACCESS_TOKEN\"}}}" > /kaniko/.docker/config.json
  script:
    - |
      /kaniko/executor --context $CI_PROJECT_DIR \
        --build-arg $CI_COMMIT_SHA \
        --dockerfile $CI_PROJECT_DIR/Dockerfile \
        --destination ghcr.io/harderthanitneedstobe/rest-api:latest

Publish GitHub - Work UI:
  needs:
    - "Kaniko - Work UI"
  environment: GitHub
  stage: Publish Container
  only:
    refs:
      - main
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  tags:
    - k8s:shared
    - arch:amd64
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"ghcr.io\":{\"username\":\"elliotcourant\",\"password\":\"$K8S_SECRET_GITHUB_ACCESS_TOKEN\"}}}" > /kaniko/.docker/config.json
  script:
    - |
      /kaniko/executor --context $CI_PROJECT_DIR \
        --dockerfile $CI_PROJECT_DIR/Dockerfile.work \
        --destination ghcr.io/harderthanitneedstobe/work-ui:latest
