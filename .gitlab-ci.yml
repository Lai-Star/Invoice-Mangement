stages:
  - Dependencies
  - Build Javascript
  - Test Javascript
  - Coverage
  - Build Container
  - Publish Container

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "external_pull_request_event"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != "main"'
      when: never

JS Dependencies:
  needs: [ ]
  stage: Dependencies
  image: containers.monetr.dev/node:15.14.0-buster
  tags:
    - k8s:shared
  script:
    - yarn install --no-lockfile # Will use my npm proxy/registry allowing for faster pulling of dependencies.
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - ./node_modules
    policy: push

Build Development:
  needs:
    - "JS Dependencies"
  stage: Build Javascript
  image: containers.monetr.dev/node:15.14.0-buster
  tags:
    - k8s:shared
  script:
    - yarn build-dev
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - ./node_modules
    policy: pull

Build Production:
  needs:
    - "JS Dependencies"
  stage: Build Javascript
  image: containers.monetr.dev/node:15.14.0-buster
  tags:
    - k8s:shared
  script:
    - yarn build-prod
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - ./build
      - ./node_modules
    policy: pull-push

Test:
  needs:
    - "JS Dependencies"
  stage: Test Javascript
  image: containers.monetr.dev/node:15.14.0-buster
  tags:
    - k8s:shared
  script:
    - yarn coverage
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - ./node_modules
    policy: pull
  artifacts:
    name: "$CI_COMMIT_SHA-coverage-report"
    paths:
      - ./reports
    expire_in: 7 days

Yeet Coverage:
  needs:
    - "Test"
  environment:
    name: DeepSource
  stage: Coverage
  when: manual
  image: ubuntu:20.04
  tags:
    - k8s:shared
  variables:
    DEBIAN_FRONTEND: noninteractive
  before_script:
    - apt-get update
    - apt-get install curl git-all -y
    - curl https://deepsource.io/cli | sh
  script:
    - DEEPSOURCE_DSN=$K8S_SECRET_DEEPSOURCE_DSN ./bin/deepsource report --analyzer test-coverage --key go --value-file ./coverage.txt
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - ./coverage.txt
    policy: pull

Kaniko:
  needs:
    - "Build Production"
  stage: Build Container
  image: containers.monetr.dev/kaniko-ci:latest
  tags:
    - k8s:shared
  script:
    - kaniko --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --no-push
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - ./build
    policy: pull

Publish GitHub:
  needs:
    - "Test"
    - "Kaniko"
  environment:
    name: GitHub
  stage: Publish Container
  only:
    refs:
      - main
  image: containers.monetr.dev/kaniko-ci:latest
  tags:
    - k8s:shared
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"ghcr.io\":{\"username\":\"elliotcourant\",\"password\":\"$K8S_SECRET_GITHUB_ACCESS_TOKEN\"}}}" > /kaniko/.docker/config.json
  script:
    - |
      kaniko --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile \
        --destination ghcr.io/monetrapp/web-ui:$(git rev-parse --short HEAD) \
        --destination ghcr.io/monetrapp/web-ui:latest
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - ./build
    policy: pull
