stages:
  - Dependencies
  - Build Javascript
  - Build Container
  - Publish Container
  - Kubernetes

Fetch Dependencies:
  stage: Dependencies
  image: node:15.8.0-buster
  tags:
    - k8s:shared
  script:
    - yarn install
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - ./node_modules
    policy: push

Build:
  stage: Build Javascript
  image: node:15.8.0-buster
  tags:
    - k8s:shared
  script:
    - yarn build
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - ./build
      - ./node_modules
    policy: pull-push

Kaniko:
  stage: Build Container
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  tags:
    - k8s:shared
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --no-push
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - ./build
    policy: pull

Publish GitLab:
  stage: Publish Container
  only:
    refs:
      - main
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  tags:
    - k8s:shared
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - |
      /kaniko/executor --context $CI_PROJECT_DIR \
        --dockerfile $CI_PROJECT_DIR/Dockerfile \
        --destination $CI_REGISTRY_IMAGE:latest
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - ./build
    policy: pull

Publish GitHub:
  stage: Publish Container
  only:
    refs:
      - main
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  tags:
    - k8s:shared
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"ghcr.io\":{\"username\":\"elliotcourant\",\"password\":\"$K8S_SECRET_GITHUB_ACCESS_TOKEN\"}}}" > /kaniko/.docker/config.json
  script:
    - |
      /kaniko/executor --context $CI_PROJECT_DIR \
        --dockerfile $CI_PROJECT_DIR/Dockerfile \
        --destination ghcr.io/harderthanitneedstobe/web-ui:latest
  cache:
    key: ${CI_COMMIT_SHA}
    paths:
      - ./build
    policy: pull

Minikube:
  stage: Kubernetes
  only:
    refs:
      - main
  image: ubuntu:20.04
  tags:
    - k8s:shared
  variables:
    K8S_VERSION: v1.18.4
    MINIKUBE_VERSION: v1.17.1
  before_script:
    - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && mv kubectl /usr/local/bin/
    - mkdir -p ${HOME}/.kube
    - touch ${HOME}/.kube/config
    - curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && mv minikube /usr/local/bin/
    - minikube start --vm-driver=none --cpus 2 --memory 4096 --kubernetes-version=${K8S_VERSION}
    - kubectl get po