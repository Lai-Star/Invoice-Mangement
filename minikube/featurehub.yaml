apiVersion: apps/v1
kind: Deployment
metadata:
  name: featurehub
  labels:
    app: featurehub
    name: featurehub
    app.kubernetes.io/name: featurehub
    app.kubernetes.io/instance: featurehub
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: featurehub
      app.kubernetes.io/instance: featurehub
  template:
    metadata:
      labels:
        app.kubernetes.io/name: featurehub
        app.kubernetes.io/instance: featurehub
    spec:
      containers:
        - name: featurehub
          image: featurehub/party-server:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8085
              protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-features
  labels:
    app: postgres-features
    name: postgres-features
    app.kubernetes.io/name: postgres-features
    app.kubernetes.io/instance: postgres-features
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres-features
      app.kubernetes.io/instance: postgres-features
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres-features
        app.kubernetes.io/instance: postgres-features
    spec:
      containers:
        - name: postgres
          image: "postgres:13"
          ports:
            - name: pg
              containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: ""
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "trust"
            - name: POSTGRES_DB
              value: "postgres"

---
apiVersion: v1
kind: Service
metadata:
  name: featurehub
  labels:
    app: featurehub
    name: featurehub
    app.kubernetes.io/name: featurehub
    app.kubernetes.io/instance: featurehub
spec:
  type: ClusterIP
  ports:
    - port: 8085
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: featurehub
    app.kubernetes.io/instance: featurehub

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: featurehub
  labels:
    app: featurehub
    name: featurehub
    app.kubernetes.io/name: featurehub
    app.kubernetes.io/instance: featurehub
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: "features.monetr.mini"
      http:
        paths:
          - path: /
            backend:
              serviceName: featurehub
              servicePort: 8085
