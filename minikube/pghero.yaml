apiVersion: apps/v1
kind: Deployment
metadata:
  name: pghero
  labels:
    app: pghero
    name: pghero
    app.kubernetes.io/name: pghero
    app.kubernetes.io/instance: pghero
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pghero
      app.kubernetes.io/instance: pghero
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pghero
        app.kubernetes.io/instance: pghero
    spec:
      containers:
        - name: pghero
          image: ankane/pghero
          imagePullPolicy: Always
          env:
            - name: DATABASE_URL
              value: postgres://postgres@postgres.default.svc.cluster.local:5432/postgres
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: pghero
  labels:
    app: pghero
    name: pghero
    app.kubernetes.io/name: pghero
    app.kubernetes.io/instance: pghero
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: pghero
    app.kubernetes.io/instance: pghero

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: pghero
  labels:
    app: pghero
    name: pghero
    app.kubernetes.io/name: pghero
    app.kubernetes.io/instance: pghero
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: "pghero.monetr.mini"
      http:
        paths:
          - path: /
            backend:
              serviceName: pghero
              servicePort: 8080
