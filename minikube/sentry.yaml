kind: ConfigMap
apiVersion: v1
metadata:
  name: relay
  labels:
    name: relay
    app: relay
data:
  config.yml: |
    relay:
      mode: proxy
      upstream: "https://example.com/"
      host: 0.0.0.0
      port: 3000
    http:
      timout: 5
      connection_timeout: 3
      max_retry_interval: 30
    limits:
      max_concurrent_requests: 50
      max_concurrent_queries: 5
      max_event_size: 1MiB
      max_attachment_size: 10MiB
      max_thread_count: 2
      max_connection_rate: 128
      max_pending_connections: 1024
      max_connections: 1000
    logging:
      format: json
      level: trace
      log_failed_payloads: true

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: relay-projects
  labels:
    name: relay
    app: relay
data:
  123456.json: |
    {
      "slug": "monetr",
      "publicKeys": [
        {
          "publicKey": "12345abcdef10111213141516171819",
          "isEnabled": true
        }
      ],
      "config": {
        "allowedDomains": ["app.monetr.mini"]
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: relay
    app: relay
  name: relay
spec:
  replicas: 1
  selector:
    matchLabels:
      name: relay
      app: relay
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: relay
        app: relay
    spec:
      volumes:
        - name: config
          configMap:
            name: relay
            optional: false
        - name: projects
          configMap:
            name: relay-projects
            optional: false
        - name: work
          emptyDir: { }
      initContainers:
        - name: setup
          image: busybox
          command:
            - /bin/sh
            - -c
            - "cp /tmp/sentry/config/* /tmp/sentry/relay/ && mkdir -p /tmp/sentry/relay/projects && cp /tmp/sentry/projects/* /tmp/sentry/relay/projects/"
          volumeMounts:
            - mountPath: /tmp/sentry/config
              name: config
            - mountPath: /tmp/sentry/projects
              name: projects
            - mountPath: /tmp/sentry/relay
              name: work
      containers:
        - name: relay
          image: getsentry/relay:07786352f563dce248b23f091f6764efe38dc03c
          imagePullPolicy: Always
          args:
            - run
            - --config
            - /work/.relay
          env:
            - name: RELAY_PORT
              value: '3000'
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          workingDir: /work
          volumeMounts:
            - mountPath: /work/.relay
              name: work

---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: relay
    app: relay
  name: relay
spec:
  ports:
    - name: relay
      port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    name: relay
    app: relay
  type: ClusterIP

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    name: relay
    app: relay
  name: relay
spec:
  rules:
    - host: relay.monetr.mini
      http:
        paths:
          - backend:
              service:
                name: relay
                port:
                  number: 3000
            path: /
            pathType: ImplementationSpecific
